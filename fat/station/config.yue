local *

import write_config from require 'fat.config'
import parse_toml from require 'fat.toml'
import F from require 'quicktype'
import spec from require 'spec'

default_config = [=[
[station]
name = '<station-name>'

[[platforms]]
name = '<platform-name>'

# Uncomment the following if this station *produces* a resource. NB: the
# resource name does not need to a Minecraft ID, it just needs to be name which
# is consistent across the network.
# produces = '<resource-name>'

# Uncomment the following if this station *consumes* a resource. NB: the
# resource name does not need to a Minecraft ID, it just needs to be name which
# is consistent across the network.
# consumes = '<resource-name>'
]=]
export init_config = F '(boolean) -> <>', (force) ->
  try
    write_config default_config, force
  catch err
    print "cannot write config: #{err}\nperhaps retry with --force?"
  return

spec ->
  import assert_that, describe, expect_that, it, matchers from require 'spec'
  import contains_key, deep_eq, each_value, has_fields, has_type, eq, no_errors from matchers

  describe 'default station config', ->
    it 'is valid toml', ->
      assert_that (-> parse_toml default_config), no_errors!

      parsed_default_config = parse_toml default_config
      expect_that parsed_default_config.station, has_type 'table'
      expect_that parsed_default_config.station, has_fields
        name: has_type 'string'
      expect_that parsed_default_config.platforms, has_type 'table'
      expect_that parsed_default_config.platforms, each_value has_type 'table'
      expect_that parsed_default_config.platforms, each_value has_fields
        name: has_type 'string'
