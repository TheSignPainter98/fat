local *

import Flag, Param, Subcommand from require 'clap'
import write_config from require 'fat.config'
import parse_toml from require 'fat.toml'
import F from require 'quicktype'

display = require 'fat.display.main'
station_config = require 'fat.station.config'
ledger = require 'fat.ledger.main'

export subcommand = with Subcommand 'init'
  \description 'initialise fat node'
  \add with Flag 'force'
    \description 'overwrite existing config'
  \add with Param 'what'
    \description 'the type of node to initialise'
    \options
      * 'station'
      * 'ledger'
      * 'display'

export main = F '({}) -> <>', (args) ->
  default_config = switch args.what
    when 'station'
      station_config.default_config
    when 'ledger'
      ledger.default_config
    when 'display'
      display.default_config
    else
      error "internal error: unrecognised what type '#{args.what}'"
  write_config default_config, args.force

  config_is_valid = false
  while not config_is_valid
    print 'press [ENTER] edit fat.toml'
    io.read '*l'

    if shell?
      shell?.run 'edit fat.toml'
    else
      os.execute 'nvim fat.toml'

    config_is_valid = validate_config args.what

  print "#{args.what} configured"
  return

validate_config = F '(string) -> boolean', (what) ->
  local raw_config
  with assert io.open 'fat.toml', 'r'
    raw_config = assert \read '*a'
    assert \close!

  config = parse_toml raw_config

  if not config[what]?
    print "config does not contain #{what} section"
    return false

  true
